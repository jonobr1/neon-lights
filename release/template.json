{
	"config": {},
	"effects": [
		[
			"Clear",
			"while ( dom.children.length ) {\n\n\tdom.removeChild( dom.lastChild );\n\n}\n\nvar renderer = new THREE.WebGLRenderer( { preserveDrawingBuffer: true } );\nrenderer.autoClear = false;\nrenderer.setSize( dom.clientWidth, dom.clientHeight );\ndom.appendChild( renderer.domElement );\n\nresources.renderer = renderer;\n\n// function init(){}\n\nfunction start(){}\n\nfunction update( progress ){\n\n\trenderer.clear();\n\n}"
		],
		[
			"Cube",
			"var parameters = {\n\tsize: new FRAME.Parameters.Float( 'Size', 1.0 )\n};\n\nvar\trenderer = resources.renderer;\n\nvar camera = new THREE.PerspectiveCamera( 50, dom.clientWidth / dom.clientHeight, 0.1, 100 );\ncamera.position.z = 5;\n\nvar scene = new THREE.Scene();\n\nvar mesh = new THREE.Mesh(\n\tnew THREE.CubeGeometry( 1, 1, 1, 2, 2, 2 ),\n\tnew THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } )\n);\nscene.add( mesh );\n\n// function init(){}\n\nfunction start(){}\n\nfunction update( progress ){\n\t\n\tcamera.position.z = 5.0 * progress;\n\tcamera.rotation.z = progress;\n\tmesh.rotation.y = progress * Math.PI * 2;\n\tmesh.scale.y = parameters.size.value;\n\trenderer.render( scene, camera );\n\n}"
		],
		[
			"Fade Out",
			"var parameters = {\n\tcolor:   new FRAME.Parameters.Color( 'Color', 0xffffff ),\n\topacity: new FRAME.Parameters.Float( 'Opacity', 1, 0, 1 )\n};\n\nvar\trenderer = resources.renderer;\n\nvar camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\nvar scene = new THREE.Scene();\nvar mesh = new THREE.Mesh(\n\tnew THREE.PlaneGeometry( 2, 2 ),\n\tnew THREE.MeshBasicMaterial( { transparent: true } )\n);\nscene.add( mesh );\n\n// function init(){}\n\nfunction start(){}\n\nfunction update( progress ){\n\t\n\tmesh.material.color.setHex( parameters.color.value );\n\tmesh.material.opacity = parameters.opacity.value * ( 1 - progress );\n\trenderer.render( scene, camera );\n\n}"
		],
		[
			"Effect",
			"var parameters = {};\n\nvar\trenderer = resources.renderer;\n\nvar camera = new THREE.PerspectiveCamera( 50, dom.clientWidth / dom.clientHeight, 0.1, 100 );\ncamera.position.z = 5;\n\nvar scene = new THREE.Scene();\n\nvar mesh = new THREE.Mesh(\n\tnew THREE.SphereGeometry( 1 ),\n\tnew THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } )\n);\nscene.add( mesh );\n\n// function init(){}\n\nfunction start(){}\n\nfunction update( progress ){\n\t\n\tcamera.position.z = 5.0 * progress;\n\tcamera.rotation.z = progress;\n\tmesh.rotation.y = progress * Math.PI * 2;\n\trenderer.render( scene, camera );\n\n}"
		]
	],
	"animations": [
		[
			"Animation",
			0,
			25.71875,
			0,
			0
		],
		[
			"Animation",
			0,
			10.226407284768202,
			1,
			1
		],
		[
			"Animation",
			10.23096026490065,
			21.730960264900652,
			1,
			3
		],
		[
			"Animation",
			10.65625,
			15.78125,
			2,
			2
		],
		[
			"Animation",
			21.786249999999875,
			33.86624999999983,
			1,
			1
		]
	]
}
